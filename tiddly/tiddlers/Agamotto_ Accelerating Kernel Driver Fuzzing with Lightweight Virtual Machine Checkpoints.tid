created: 20210406153751015
modified: 20210406155156488
tags: Research Security System Attack Fuzz Paper
title: Agamotto: Accelerating Kernel Driver Fuzzing with Lightweight Virtual Machine Checkpoints
type: text/vnd.tiddlywiki

''USENIX'20''

[[Paper|https://www.usenix.org/conference/usenixsecurity20/presentation/song]]


<<<
Kernel-mode drivers are challenging to analyze for vulnerabilities, yet play a critical role in maintaining the security of OS kernels. Their wide attack surface, exposed via both the system call interface and the peripheral interface, is often found to be the most direct attack vector to compromise an OS kernel. Researchers therefore have proposed many fuzzing techniques to find vulnerabilities in kernel drivers. However, the performance of kernel fuzzers is still lacking, for reasons such as prolonged execution of kernel code, interference between test inputs, and kernel crashes.

This paper proposes lightweight virtual machine checkpointing as a new primitive that enables high-throughput kernel driver fuzzing. Our key insight is that kernel driver fuzzers frequently execute similar test cases in a row, and that their performance can be improved by dynamically creating multiple checkpoints while executing test cases and skipping parts of test cases using the created checkpoints. We built a system, dubbed Agamotto, around the virtual machine checkpointing primitive and evaluated it by fuzzing the peripheral attack surface of USB and PCI drivers in Linux. The results are convincing. Agamotto improved the performance of the state-of-the-art kernel fuzzer, Syzkaller, by 66.6% on average in fuzzing 8 USB drivers, and an AFL-based PCI fuzzer by 21.6% in fuzzing 4 PCI drivers, without modifying their underlying input generation algorithm.
<<<

! Design

* Using  checkpoints to store state and restore the state => accelerate fuzzing

[img[Agamotto1.png]]
[img[Agamotto2.png]]
